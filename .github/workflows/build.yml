name: Build OpenWRT IPK for GL-MT3000

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ipk:
    runs-on: ubuntu-latest
    name: Build srt-to-rist-gateway
    env:
      TERM: xterm
      FORCE_UNSAFE_CONFIGURE: 1
      CCACHE_DIR: ${{ github.workspace }}/.ccache
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4

      - name: Cache OpenWRT SDK and ccache
        uses: actions/cache@v3
        with:
          path: |
            openwrt-sdk
            openwrt-packages
            openwrt-core
            openwrt-srt
            openwrt-librist
            openwrt-spdlog
            .ccache
          key: ${{ runner.os }}-openwrt-sdk-23.05.3-${{ hashFiles('**/*.mk', '**/*.cmake', 'Makefile') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-openwrt-sdk-23.05.3-${{ hashFiles('**/*.mk', '**/*.cmake', 'Makefile') }}-
            ${{ runner.os }}-openwrt-sdk-23.05.3-

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/local/share/boost /usr/lib/jvm
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          df -h

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            libncurses5-dev \
            zlib1g-dev \
            gawk \
            git \
            gettext \
            libssl-dev \
            xsltproc \
            wget \
            unzip \
            python3 \
            python3-pip \
            rsync \
            file \
            pkg-config \
            cmake \
            ccache
          
          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools wheel

      - name: Download and setup OpenWRT SDK
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          wget -q https://downloads.openwrt.org/releases/23.05.3/targets/mediatek/filogic/openwrt-sdk-23.05.3-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          tar xf openwrt-sdk-23.05.3-mediatek-filogic_*.tar.xz
          mv openwrt-sdk-*/ openwrt-sdk
          rm -f openwrt-sdk-*.tar.xz
          
          mkdir -p openwrt-sdk/package/{libs,multimedia}
          
          # Clone repositories in parallel
          git clone --depth=1 --branch v23.05.3 https://github.com/openwrt/packages.git openwrt-packages &
          git clone --depth=1 --branch v23.05.3 https://github.com/openwrt/openwrt.git openwrt-core &
          git clone --depth=1 https://github.com/Haivision/srt.git openwrt-srt &
          git clone --depth=1 https://code.videolan.org/rist/librist.git openwrt-librist &
          git clone --depth=1 https://github.com/gabime/spdlog.git openwrt-spdlog &
          wait
          
          cp -r openwrt-core/package/libs/openssl openwrt-sdk/package/libs/libopenssl
          cp -r openwrt-packages/multimedia/ffmpeg openwrt-sdk/package/multimedia/
          cp -r openwrt-srt openwrt-sdk/package/libs/srt
          cp -r openwrt-librist openwrt-sdk/package/libs/librist
          cp -r openwrt-spdlog openwrt-sdk/package/libs/spdlog

      - name: Update and install feeds
        run: |
          cd openwrt-sdk
          rm -rf feeds tmp
          
          cat > feeds.conf <<EOF
          src-git packages https://github.com/openwrt/packages.git;v23.05.3
          src-git luci https://github.com/openwrt/luci.git;v23.05.3
          src-git routing https://github.com/openwrt/routing.git;v23.05.3
          src-git telephony https://github.com/openwrt/telephony.git;v23.05.3
          EOF
          
          ./scripts/feeds update -a
          ./scripts/feeds install -a -f
          ./scripts/feeds install ffmpeg libavcodec libavutil libavformat

      - name: Prepare package directory
        run: |
          mkdir -p openwrt-sdk/package/srt-to-rist-gateway
          rsync -a --delete src/ openwrt-sdk/package/srt-to-rist-gateway/src/
          rsync -a CMakeLists.txt Makefile config.json openwrt-sdk/package/srt-to-rist-gateway/
          if [ -d "init.d" ]; then rsync -a init.d openwrt-sdk/package/srt-to-rist-gateway/; fi

      - name: Configure build
        run: |
          cd openwrt-sdk
          cat > .config <<EOF
          CONFIG_TARGET_mediatek_filogic=y
          CONFIG_TARGET_mediatek_filogic_DEVICE_glinet_gl-mt3000=y
          CONFIG_CCACHE=y
          CONFIG_DEVEL=y
          CONFIG_PACKAGE_librist=m
          CONFIG_PACKAGE_srt=m
          CONFIG_PACKAGE_ffmpeg=m
          CONFIG_PACKAGE_libopenssl=m
          CONFIG_PACKAGE_libpthread=m
          CONFIG_PACKAGE_srt-to-rist-gateway=m
          CONFIG_PACKAGE_kmod-crypto-hash=y
          CONFIG_PACKAGE_kmod-crypto-crc32c=y
          CONFIG_FFMPEG_CUSTOM_ENCODERS=y
          CONFIG_FFMPEG_CUSTOM_DECODERS=y
          CONFIG_FFMPEG_CUSTOM_MUXERS=y
          CONFIG_FFMPEG_CUSTOM_DEMUXERS=y
          CONFIG_FFMPEG_CUSTOM_PARSERS=y
          CONFIG_FFMPEG_CUSTOM_PROTOCOLS=y
          CONFIG_OPENSSL_ENGINE=y
          CONFIG_OPENSSL_WITH_ASM=y
          CONFIG_OPENSSL_WITH_DEPRECATED=y
          CONFIG_OPENSSL_WITH_ERROR_MESSAGES=y
          EOF
          
          make defconfig

      - name: Build package
        run: |
          cd openwrt-sdk
          make package/srt-to-rist-gateway/compile -j$(nproc) || {
            echo "Build failed"
            find logs -type f -name '*.txt' -exec cat {} \;
            exit 1
          }

      - name: Upload .ipk package
        uses: actions/upload-artifact@v4
        with:
          name: srt-to-rist-gateway-ipk
          path: openwrt-sdk/bin/packages/*/*/srt-to-rist-gateway_*.ipk

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: openwrt-sdk/logs
