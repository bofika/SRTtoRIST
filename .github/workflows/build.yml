name: Build OpenWRT IPK for GL-MT3000

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ipk:
    runs-on: ubuntu-latest
    name: Build srt-to-rist-gateway
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          df -h

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libncurses5-dev zlib1g-dev gawk git gettext \
            libssl-dev xsltproc wget unzip python3 rsync file pkg-config cmake

      - name: Configure Git
        run: |
          git config --global http.postBuffer 524288000
          git config --global core.compression 9
          git config --global http.lowSpeedLimit 1000
          git config --global http.lowSpeedTime 60

      - name: Download OpenWRT SDK
        run: |
          wget https://downloads.openwrt.org/releases/23.05.3/targets/mediatek/filogic/openwrt-sdk-23.05.3-mediatek-filogic_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          tar -xf openwrt-sdk-23.05.3-mediatek-filogic_*.tar.xz
          mv openwrt-sdk-*/ openwrt-sdk

      - name: Clone OpenWRT packages repository
        run: |
          mkdir -p openwrt-sdk/package/{libs,multimedia}
          
          function clone_with_retry() {
            local repo=$1
            local dir=$2
            local max_attempts=5
            local attempt=1
            
            while [ $attempt -le $max_attempts ]; do
              echo "Cloning $repo (attempt $attempt/$max_attempts)"
              if git clone --depth=1 "$repo" "$dir"; then
                return 0
              fi
              attempt=$((attempt + 1))
              sleep $((attempt * 5))
            done
            return 1
          }
          
          # Clone main packages repo
          clone_with_retry https://github.com/openwrt/packages.git openwrt-packages || exit 1
          
          # Clone OpenWRT core for OpenSSL and kernel modules
          clone_with_retry https://github.com/openwrt/openwrt.git openwrt-core || exit 1
          cp -r openwrt-core/package/libs/openssl openwrt-sdk/package/libs/libopenssl
          cp -r openwrt-core/package/kernel/linux openwrt-sdk/package/kernel/
          
          # Copy FFmpeg from packages
          cp -r openwrt-packages/multimedia/ffmpeg openwrt-sdk/package/multimedia/
          
          # Clone SRT package
          clone_with_retry https://github.com/Haivision/srt.git openwrt-srt || exit 1
          cp -r openwrt-srt openwrt-sdk/package/libs/srt
          
          # Clone librist package
          clone_with_retry https://code.videolan.org/rist/librist.git openwrt-librist || exit 1
          cp -r openwrt-librist openwrt-sdk/package/libs/librist

      - name: Update and install feeds
        run: |
          cd openwrt-sdk
          
          # Clean feeds first
          rm -rf feeds tmp
          
          # Update feeds with retry
          for i in $(seq 1 5); do
            if ./scripts/feeds update -a && ./scripts/feeds install -a; then
              break
            fi
            echo "Feed update attempt $i failed, retrying..."
            sleep $((i * 5))
            if [ $i -eq 5 ]; then
              echo "Failed to update feeds after 5 attempts"
              exit 1
            fi
          done

      - name: Prepare package directory
        run: |
          mkdir -p openwrt-sdk/package/srt-to-rist-gateway
          rsync -av src/ openwrt-sdk/package/srt-to-rist-gateway/src/
          rsync -av CMakeLists.txt Makefile config.json openwrt-sdk/package/srt-to-rist-gateway/
          if [ -d "init.d" ]; then rsync -av init.d openwrt-sdk/package/srt-to-rist-gateway/; fi

      - name: Clean previous builds
        run: |
          rm -rf openwrt-sdk/build_dir/target-* openwrt-sdk/staging_dir/target-*
          rm -rf openwrt-sdk/tmp

      - name: Check system resources
        run: |
          free -h
          df -h

      - name: Configure build
        run: |
          cd openwrt-sdk
          
          # Create base config
          cat > .config <<EOF
          CONFIG_TARGET_mediatek_filogic=y
          CONFIG_TARGET_mediatek_filogic_DEVICE_glinet_gl-mt3000=y
          CONFIG_ALL_NONSHARED=y
          CONFIG_ALL_KMODS=y
          CONFIG_KERNEL_MODULES=y
          CONFIG_PACKAGE_kmod-core=y
          
          # Package configuration
          CONFIG_PACKAGE_librist=m
          CONFIG_PACKAGE_srt=m
          CONFIG_PACKAGE_libavformat=m
          CONFIG_PACKAGE_libavcodec=m
          CONFIG_PACKAGE_libavutil=m
          CONFIG_PACKAGE_libopenssl=m
          CONFIG_PACKAGE_srt-to-rist-gateway=m
          
          # Explicitly disable problematic packages
          CONFIG_PACKAGE_wpa-supplicant-mesh-openssl=n
          CONFIG_PACKAGE_gnunet-utils=n
          CONFIG_PACKAGE_openssl-util=n
          CONFIG_PACKAGE_luci-ssl-nginx=n
          CONFIG_PACKAGE_openvpn-easy-rsa=n
          CONFIG_PACKAGE_nsd-control-setup=n
          CONFIG_PACKAGE_freeswitch-util-gentls-cert=n
          
          # Kernel configuration
          CONFIG_KERNEL_BUILD_USER="OpenWRT"
          CONFIG_KERNEL_BUILD_DOMAIN="openwrt.org"
          CONFIG_KERNEL_KALLSYMS=y
          CONFIG_KERNEL_DEBUG_KERNEL=y
          CONFIG_KERNEL_DEBUG_INFO=y
          CONFIG_KERNEL_AIO=y
          CONFIG_KERNEL_MAGIC_SYSRQ=y
          CONFIG_KERNEL_COREDUMP=y
          CONFIG_KERNEL_ELF_CORE=y
          CONFIG_KERNEL_PRINTK_TIME=y
          CONFIG_KERNEL_MODULES=y
          CONFIG_KERNEL_MODULESDIR="/lib/modules"
          
          # Required kernel modules
          CONFIG_PACKAGE_kmod-crypto-hash=y
          CONFIG_PACKAGE_kmod-crypto-crc32c=y
          CONFIG_PACKAGE_kmod-lib-crc32c=y
          EOF
          
          # Generate full config
          make defconfig
          
          # Process config-package.in to fix dependencies
          if [ -f "tmp/.config-package.in" ]; then
            # Remove self-dependencies
            sed -i '/^config PACKAGE_.*$/{N;/\n.*depends on PACKAGE_.*$/d}' tmp/.config-package.in
            
            # Remove circular dependencies
            sed -i '/select PACKAGE_.*$/d' tmp/.config-package.in
            
            # Add default n to problematic packages
            sed -i 's/^config PACKAGE_\(wpa-supplicant-mesh-openssl\|gnunet-utils\|openssl-util\|luci-ssl-nginx\|openvpn-easy-rsa\|nsd-control-setup\|freeswitch-util-gentls-cert\)$/&\n\tdefault n/' tmp/.config-package.in
          fi
          
          # Regenerate config after fixes
          make defconfig
          
          # Save config for debugging
          cp .config config.debug

      - name: Build kernel and modules
        run: |
          cd openwrt-sdk
          make target/linux/compile -j$(nproc) || {
            echo "Kernel build failed. Creating empty modules.builtin..."
            mkdir -p build_dir/target-aarch64_cortex-a53_musl/linux-mediatek_filogic/linux-5.15.150/
            touch build_dir/target-aarch64_cortex-a53_musl/linux-mediatek_filogic/linux-5.15.150/modules.builtin
          }

      - name: Build packages
        run: |
          cd openwrt-sdk
          make package/srt-to-rist-gateway/compile V=s || {
            echo "Build failed. Checking logs..."
            if [ -f "logs/package/srt-to-rist-gateway/compile.txt" ]; then
              cat logs/package/srt-to-rist-gateway/compile.txt
            fi
            if [ -f "config.debug" ]; then
              echo "Debug config:"
              cat config.debug
            fi
            exit 1
          }

      - name: Upload .ipk package
        uses: actions/upload-artifact@v4
        with:
          name: srt-to-rist-gateway-ipk
          path: openwrt-sdk/bin/packages/*/*/srt-to-rist-gateway_*.ipk

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            openwrt-sdk/logs
            openwrt-sdk/config.debug
